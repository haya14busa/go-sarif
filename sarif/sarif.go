package sarif

// generated by "schematyper --out-file=sarif/sarif.go --package sarif --root-type=Sarif sarif-schema-2.1.0.json" -- DO NOT EDIT

import "time"

// A physical or virtual address, or a range of addresses, in an 'addressable region' (memory or a binary file).
type Address struct {
	AbsoluteAddress    int         `json:"absoluteAddress,omitempty"`
	FullyQualifiedName string      `json:"fullyQualifiedName,omitempty"`
	Index              int         `json:"index,omitempty"`
	Kind               string      `json:"kind,omitempty"`
	Length             int         `json:"length,omitempty"`
	Name               string      `json:"name,omitempty"`
	OffsetFromParent   int         `json:"offsetFromParent,omitempty"`
	ParentIndex        int         `json:"parentIndex,omitempty"`
	Properties         PropertyBag `json:"properties,omitempty"`
	RelativeAddress    int         `json:"relativeAddress,omitempty"`
}

// A single artifact. In some cases, this artifact might be nested within another artifact.
type Artifact struct {
	Contents            ArtifactContent  `json:"contents,omitempty"`
	Description         Message          `json:"description,omitempty"`
	Encoding            string           `json:"encoding,omitempty"`
	Hashes              map[string]Hash  `json:"hashes,omitempty"`
	LastModifiedTimeUtc time.Time        `json:"lastModifiedTimeUtc,omitempty"`
	Length              int              `json:"length,omitempty"`
	Location            ArtifactLocation `json:"location,omitempty"`
	MimeType            string           `json:"mimeType,omitempty"`
	Offset              int              `json:"offset,omitempty"`
	ParentIndex         int              `json:"parentIndex,omitempty"`
	Properties          PropertyBag      `json:"properties,omitempty"`
	Roles               []Role           `json:"roles,omitempty"`
	SourceLanguage      string           `json:"sourceLanguage,omitempty"`
}

// A change to a single artifact.
type ArtifactChange struct {
	ArtifactLocation ArtifactLocation `json:"artifactLocation"`
	Properties       PropertyBag      `json:"properties,omitempty"`
	Replacements     []Replacement    `json:"replacements"`
}

// Represents the contents of an artifact.
type ArtifactContent struct {
	Binary     string                   `json:"binary,omitempty"`
	Properties PropertyBag              `json:"properties,omitempty"`
	Rendered   MultiformatMessageString `json:"rendered,omitempty"`
	Text       string                   `json:"text,omitempty"`
}

// Specifies the location of an artifact.
type ArtifactLocation struct {
	Description Message     `json:"description,omitempty"`
	Index       int         `json:"index,omitempty"`
	Properties  PropertyBag `json:"properties,omitempty"`
	URI         string      `json:"uri,omitempty"`
	URIBaseID   string      `json:"uriBaseId,omitempty"`
}

// An artifact relevant to a result.
type Attachment struct {
	ArtifactLocation ArtifactLocation `json:"artifactLocation"`
	Description      Message          `json:"description,omitempty"`
	Properties       PropertyBag      `json:"properties,omitempty"`
	Rectangles       []Rectangle      `json:"rectangles,omitempty"`
	Regions          []Region         `json:"regions,omitempty"`
}

// A set of threadFlows which together describe a pattern of code execution relevant to detecting a result.
type CodeFlow struct {
	Message     Message      `json:"message,omitempty"`
	Properties  PropertyBag  `json:"properties,omitempty"`
	ThreadFlows []ThreadFlow `json:"threadFlows"`
}

// Information about how a specific rule or notification was reconfigured at runtime.
type ConfigurationOverride struct {
	Configuration ReportingConfiguration       `json:"configuration"`
	Descriptor    ReportingDescriptorReference `json:"descriptor"`
	Properties    PropertyBag                  `json:"properties,omitempty"`
}

// The kinds of data contained in this object.
type Content interface{}

// Describes how a converter transformed the output of a static analysis tool from the analysis tool's native output format into the SARIF format.
type Conversion struct {
	AnalysisToolLogFiles []ArtifactLocation `json:"analysisToolLogFiles,omitempty"`
	Invocation           Invocation         `json:"invocation,omitempty"`
	Properties           PropertyBag        `json:"properties,omitempty"`
	Tool                 Tool               `json:"tool"`
}

// An array of unique identifies in the form of a GUID by which this report was known in some previous version of the analysis tool.
type DeprecatedGUID string

// An array of stable, opaque identifiers by which this report was known in some previous version of the analysis tool.
type DeprecatedID string

// An array of readable identifiers by which this report was known in some previous version of the analysis tool.
type DeprecatedName string

// Represents a directed edge in a graph.
type Edge struct {
	ID           string      `json:"id"`
	Label        Message     `json:"label,omitempty"`
	Properties   PropertyBag `json:"properties,omitempty"`
	SourceNodeID string      `json:"sourceNodeId"`
	TargetNodeID string      `json:"targetNodeId"`
}

// Represents the traversal of a single edge during a graph traversal.
type EdgeTraversal struct {
	EdgeID            string                              `json:"edgeId"`
	FinalState        map[string]MultiformatMessageString `json:"finalState,omitempty"`
	Message           Message                             `json:"message,omitempty"`
	Properties        PropertyBag                         `json:"properties,omitempty"`
	StepOverEdgeCount int                                 `json:"stepOverEdgeCount,omitempty"`
}

// The environment variables associated with the analysis tool process, expressed as key/value pairs.
type EnvironmentVariable string

// Describes a runtime exception encountered during the execution of an analysis tool.
type Exception struct {
	InnerExceptions []Exception `json:"innerExceptions,omitempty"`
	Kind            string      `json:"kind,omitempty"`
	Message         string      `json:"message,omitempty"`
	Properties      PropertyBag `json:"properties,omitempty"`
	Stack           Stack       `json:"stack,omitempty"`
}

// The top-level element of an external property file.
type ExternalProperties struct {
	Addresses              []Address            `json:"addresses,omitempty"`
	Artifacts              []Artifact           `json:"artifacts,omitempty"`
	Conversion             Conversion           `json:"conversion,omitempty"`
	Driver                 ToolComponent        `json:"driver,omitempty"`
	Extensions             []ToolComponent      `json:"extensions,omitempty"`
	ExternalizedProperties PropertyBag          `json:"externalizedProperties,omitempty"`
	GUID                   string               `json:"guid,omitempty"`
	Graphs                 []Graph              `json:"graphs,omitempty"`
	Invocations            []Invocation         `json:"invocations,omitempty"`
	LogicalLocations       []LogicalLocation    `json:"logicalLocations,omitempty"`
	Policies               []ToolComponent      `json:"policies,omitempty"`
	Properties             PropertyBag          `json:"properties,omitempty"`
	Results                []Result             `json:"results,omitempty"`
	RunGUID                string               `json:"runGuid,omitempty"`
	Schema                 string               `json:"schema,omitempty"`
	Taxonomies             []ToolComponent      `json:"taxonomies,omitempty"`
	ThreadFlowLocations    []ThreadFlowLocation `json:"threadFlowLocations,omitempty"`
	Translations           []ToolComponent      `json:"translations,omitempty"`
	Version                interface{}          `json:"version,omitempty"`
	WebRequests            []WebRequest         `json:"webRequests,omitempty"`
	WebResponses           []WebResponse        `json:"webResponses,omitempty"`
}

// Contains information that enables a SARIF consumer to locate the external property file that contains the value of an externalized property associated with the run.
type ExternalPropertyFileReference struct {
	GUID       string           `json:"guid,omitempty"`
	ItemCount  int              `json:"itemCount,omitempty"`
	Location   ArtifactLocation `json:"location,omitempty"`
	Properties PropertyBag      `json:"properties,omitempty"`
}

// References to external property files that should be inlined with the content of a root log file.
type ExternalPropertyFileReferences struct {
	Addresses              []ExternalPropertyFileReference `json:"addresses,omitempty"`
	Artifacts              []ExternalPropertyFileReference `json:"artifacts,omitempty"`
	Conversion             ExternalPropertyFileReference   `json:"conversion,omitempty"`
	Driver                 ExternalPropertyFileReference   `json:"driver,omitempty"`
	Extensions             []ExternalPropertyFileReference `json:"extensions,omitempty"`
	ExternalizedProperties ExternalPropertyFileReference   `json:"externalizedProperties,omitempty"`
	Graphs                 []ExternalPropertyFileReference `json:"graphs,omitempty"`
	Invocations            []ExternalPropertyFileReference `json:"invocations,omitempty"`
	LogicalLocations       []ExternalPropertyFileReference `json:"logicalLocations,omitempty"`
	Policies               []ExternalPropertyFileReference `json:"policies,omitempty"`
	Properties             PropertyBag                     `json:"properties,omitempty"`
	Results                []ExternalPropertyFileReference `json:"results,omitempty"`
	Taxonomies             []ExternalPropertyFileReference `json:"taxonomies,omitempty"`
	ThreadFlowLocations    []ExternalPropertyFileReference `json:"threadFlowLocations,omitempty"`
	Translations           []ExternalPropertyFileReference `json:"translations,omitempty"`
	WebRequests            []ExternalPropertyFileReference `json:"webRequests,omitempty"`
	WebResponses           []ExternalPropertyFileReference `json:"webResponses,omitempty"`
}

// A set of strings each of which individually defines a stable, unique identity for the result.
type Fingerprint string

// A proposed fix for the problem represented by a result object. A fix specifies a set of artifacts to modify. For each artifact, it specifies a set of bytes to remove, and provides a set of new bytes to replace them.
type Fix struct {
	ArtifactChanges []ArtifactChange `json:"artifactChanges"`
	Description     Message          `json:"description,omitempty"`
	Properties      PropertyBag      `json:"properties,omitempty"`
}

// A network of nodes and directed edges that describes some aspect of the structure of the code (for example, a call graph).
type Graph struct {
	Description Message     `json:"description,omitempty"`
	Edges       []Edge      `json:"edges,omitempty"`
	Nodes       []Node      `json:"nodes,omitempty"`
	Properties  PropertyBag `json:"properties,omitempty"`
}

// Represents a path through a graph.
type GraphTraversal struct {
	Description      Message                             `json:"description,omitempty"`
	EdgeTraversals   []EdgeTraversal                     `json:"edgeTraversals,omitempty"`
	ImmutableState   map[string]MultiformatMessageString `json:"immutableState,omitempty"`
	InitialState     map[string]MultiformatMessageString `json:"initialState,omitempty"`
	Properties       PropertyBag                         `json:"properties,omitempty"`
	ResultGraphIndex int                                 `json:"resultGraphIndex,omitempty"`
	RunGraphIndex    int                                 `json:"runGraphIndex,omitempty"`
}

// A dictionary, each of whose keys is the name of a hash function and each of whose values is the hashed value of the artifact produced by the specified hash function.
type Hash string

// The runtime environment of the analysis tool run.
type Invocation struct {
	Account                            string                         `json:"account,omitempty"`
	Arguments                          []InvocationArgument           `json:"arguments,omitempty"`
	CommandLine                        string                         `json:"commandLine,omitempty"`
	EndTimeUtc                         time.Time                      `json:"endTimeUtc,omitempty"`
	EnvironmentVariables               map[string]EnvironmentVariable `json:"environmentVariables,omitempty"`
	ExecutableLocation                 ArtifactLocation               `json:"executableLocation,omitempty"`
	ExecutionSuccessful                bool                           `json:"executionSuccessful"`
	ExitCode                           int                            `json:"exitCode,omitempty"`
	ExitCodeDescription                string                         `json:"exitCodeDescription,omitempty"`
	ExitSignalName                     string                         `json:"exitSignalName,omitempty"`
	ExitSignalNumber                   int                            `json:"exitSignalNumber,omitempty"`
	Machine                            string                         `json:"machine,omitempty"`
	NotificationConfigurationOverrides []ConfigurationOverride        `json:"notificationConfigurationOverrides,omitempty"`
	ProcessID                          int                            `json:"processId,omitempty"`
	ProcessStartFailureMessage         string                         `json:"processStartFailureMessage,omitempty"`
	Properties                         PropertyBag                    `json:"properties,omitempty"`
	ResponseFiles                      []ArtifactLocation             `json:"responseFiles,omitempty"`
	RuleConfigurationOverrides         []ConfigurationOverride        `json:"ruleConfigurationOverrides,omitempty"`
	StartTimeUtc                       time.Time                      `json:"startTimeUtc,omitempty"`
	Stderr                             ArtifactLocation               `json:"stderr,omitempty"`
	Stdin                              ArtifactLocation               `json:"stdin,omitempty"`
	Stdout                             ArtifactLocation               `json:"stdout,omitempty"`
	StdoutStderr                       ArtifactLocation               `json:"stdoutStderr,omitempty"`
	ToolConfigurationNotifications     []Notification                 `json:"toolConfigurationNotifications,omitempty"`
	ToolExecutionNotifications         []Notification                 `json:"toolExecutionNotifications,omitempty"`
	WorkingDirectory                   ArtifactLocation               `json:"workingDirectory,omitempty"`
}

// An array of strings, containing in order the command line arguments passed to the tool from the operating system.
type InvocationArgument string

// A location within a programming artifact.
type Location struct {
	Annotations      []Region               `json:"annotations,omitempty"`
	ID               int                    `json:"id,omitempty"`
	LogicalLocations []LogicalLocation      `json:"logicalLocations,omitempty"`
	Message          Message                `json:"message,omitempty"`
	PhysicalLocation PhysicalLocation       `json:"physicalLocation,omitempty"`
	Properties       PropertyBag            `json:"properties,omitempty"`
	Relationships    []LocationRelationship `json:"relationships,omitempty"`
}

// Information about the relation of one location to another.
type LocationRelationship struct {
	Description Message                    `json:"description,omitempty"`
	Kinds       []LocationRelationshipKind `json:"kinds,omitempty"`
	Properties  PropertyBag                `json:"properties,omitempty"`
	Target      int                        `json:"target"`
}

// A set of distinct strings that categorize the relationship. Well-known kinds include 'includes', 'isIncludedBy' and 'relevant'.
type LocationRelationshipKind string

// A logical location of a construct that produced a result.
type LogicalLocation struct {
	DecoratedName      string      `json:"decoratedName,omitempty"`
	FullyQualifiedName string      `json:"fullyQualifiedName,omitempty"`
	Index              int         `json:"index,omitempty"`
	Kind               string      `json:"kind,omitempty"`
	Name               string      `json:"name,omitempty"`
	ParentIndex        int         `json:"parentIndex,omitempty"`
	Properties         PropertyBag `json:"properties,omitempty"`
}

// Encapsulates a message intended to be read by the end user.
type Message struct {
	Arguments  []MessageArgument `json:"arguments,omitempty"`
	ID         string            `json:"id,omitempty"`
	Markdown   string            `json:"markdown,omitempty"`
	Properties PropertyBag       `json:"properties,omitempty"`
	Text       string            `json:"text,omitempty"`
}

// An array of strings to substitute into the message string.
type MessageArgument string

// A message string or message format string rendered in multiple formats.
type MultiformatMessageString struct {
	Markdown   string      `json:"markdown,omitempty"`
	Properties PropertyBag `json:"properties,omitempty"`
	Text       string      `json:"text"`
}

// An ordered list of character sequences that were treated as line breaks when computing region information for the run.
type NewlineSequence string

// Represents a node in a graph.
type Node struct {
	Children   []Node      `json:"children,omitempty"`
	ID         string      `json:"id"`
	Label      Message     `json:"label,omitempty"`
	Location   Location    `json:"location,omitempty"`
	Properties PropertyBag `json:"properties,omitempty"`
}

// Describes a condition relevant to the tool itself, as opposed to being relevant to a target being analyzed by the tool.
type Notification struct {
	AssociatedRule ReportingDescriptorReference `json:"associatedRule,omitempty"`
	Descriptor     ReportingDescriptorReference `json:"descriptor,omitempty"`
	Exception      Exception                    `json:"exception,omitempty"`
	Level          interface{}                  `json:"level,omitempty"`
	Locations      []Location                   `json:"locations,omitempty"`
	Message        Message                      `json:"message"`
	Properties     PropertyBag                  `json:"properties,omitempty"`
	ThreadID       int                          `json:"threadId,omitempty"`
	TimeUtc        time.Time                    `json:"timeUtc,omitempty"`
}

// A set of strings that contribute to the stable, unique identity of the result.
type PartialFingerprint string

// A physical location relevant to a result. Specifies a reference to a programming artifact together with a range of bytes or characters within that artifact.
type PhysicalLocation struct {
	Address          Address          `json:"address,omitempty"`
	ArtifactLocation ArtifactLocation `json:"artifactLocation,omitempty"`
	ContextRegion    Region           `json:"contextRegion,omitempty"`
	Properties       PropertyBag      `json:"properties,omitempty"`
	Region           Region           `json:"region,omitempty"`
}

// Key/value pairs that provide additional information about the object.
type PropertyBag map[string]interface{}

// An area within an image.
type Rectangle struct {
	Bottom     float64     `json:"bottom,omitempty"`
	Left       float64     `json:"left,omitempty"`
	Message    Message     `json:"message,omitempty"`
	Properties PropertyBag `json:"properties,omitempty"`
	Right      float64     `json:"right,omitempty"`
	Top        float64     `json:"top,omitempty"`
}

// An array of strings used to replace sensitive information in a redaction-aware property.
type RedactionToken string

// A region within an artifact where a result was detected.
type Region struct {
	ByteLength     int             `json:"byteLength,omitempty"`
	ByteOffset     int             `json:"byteOffset,omitempty"`
	CharLength     int             `json:"charLength,omitempty"`
	CharOffset     int             `json:"charOffset,omitempty"`
	EndColumn      int             `json:"endColumn,omitempty"`
	EndLine        int             `json:"endLine,omitempty"`
	Message        Message         `json:"message,omitempty"`
	Properties     PropertyBag     `json:"properties,omitempty"`
	Snippet        ArtifactContent `json:"snippet,omitempty"`
	SourceLanguage string          `json:"sourceLanguage,omitempty"`
	StartColumn    int             `json:"startColumn,omitempty"`
	StartLine      int             `json:"startLine,omitempty"`
}

// The replacement of a single region of an artifact.
type Replacement struct {
	DeletedRegion   Region          `json:"deletedRegion"`
	InsertedContent ArtifactContent `json:"insertedContent,omitempty"`
	Properties      PropertyBag     `json:"properties,omitempty"`
}

// Information about a rule or notification that can be configured at runtime.
type ReportingConfiguration struct {
	Enabled    bool        `json:"enabled,omitempty"`
	Level      interface{} `json:"level,omitempty"`
	Parameters PropertyBag `json:"parameters,omitempty"`
	Properties PropertyBag `json:"properties,omitempty"`
	Rank       float64     `json:"rank,omitempty"`
}

// Metadata that describes a specific report produced by the tool, as part of the analysis it provides or its runtime reporting.
type ReportingDescriptor struct {
	DefaultConfiguration ReportingConfiguration              `json:"defaultConfiguration,omitempty"`
	DeprecatedGuids      []DeprecatedGUID                    `json:"deprecatedGuids,omitempty"`
	DeprecatedIds        []DeprecatedID                      `json:"deprecatedIds,omitempty"`
	DeprecatedNames      []DeprecatedName                    `json:"deprecatedNames,omitempty"`
	FullDescription      MultiformatMessageString            `json:"fullDescription,omitempty"`
	GUID                 string                              `json:"guid,omitempty"`
	Help                 MultiformatMessageString            `json:"help,omitempty"`
	HelpURI              string                              `json:"helpUri,omitempty"`
	ID                   string                              `json:"id"`
	MessageStrings       map[string]MultiformatMessageString `json:"messageStrings,omitempty"`
	Name                 string                              `json:"name,omitempty"`
	Properties           PropertyBag                         `json:"properties,omitempty"`
	Relationships        []ReportingDescriptorRelationship   `json:"relationships,omitempty"`
	ShortDescription     MultiformatMessageString            `json:"shortDescription,omitempty"`
}

// Information about how to locate a relevant reporting descriptor.
type ReportingDescriptorReference struct {
	GUID          string                 `json:"guid,omitempty"`
	ID            string                 `json:"id,omitempty"`
	Index         int                    `json:"index,omitempty"`
	Properties    PropertyBag            `json:"properties,omitempty"`
	ToolComponent ToolComponentReference `json:"toolComponent,omitempty"`
}

// Information about the relation of one reporting descriptor to another.
type ReportingDescriptorRelationship struct {
	Description Message                               `json:"description,omitempty"`
	Kinds       []ReportingDescriptorRelationshipKind `json:"kinds,omitempty"`
	Properties  PropertyBag                           `json:"properties,omitempty"`
	Target      ReportingDescriptorReference          `json:"target"`
}

// A set of distinct strings that categorize the relationship. Well-known kinds include 'canPrecede', 'canFollow', 'willPrecede', 'willFollow', 'superset', 'subset', 'equal', 'disjoint', 'relevant', and 'incomparable'.
type ReportingDescriptorRelationshipKind string

// A result produced by an analysis tool.
type Result struct {
	AnalysisTarget      ArtifactLocation               `json:"analysisTarget,omitempty"`
	Attachments         []Attachment                   `json:"attachments,omitempty"`
	BaselineState       interface{}                    `json:"baselineState,omitempty"`
	CodeFlows           []CodeFlow                     `json:"codeFlows,omitempty"`
	CorrelationGUID     string                         `json:"correlationGuid,omitempty"`
	Fingerprints        map[string]Fingerprint         `json:"fingerprints,omitempty"`
	Fixes               []Fix                          `json:"fixes,omitempty"`
	GUID                string                         `json:"guid,omitempty"`
	GraphTraversals     []GraphTraversal               `json:"graphTraversals,omitempty"`
	Graphs              []Graph                        `json:"graphs,omitempty"`
	HostedViewerURI     string                         `json:"hostedViewerUri,omitempty"`
	Kind                interface{}                    `json:"kind,omitempty"`
	Level               interface{}                    `json:"level,omitempty"`
	Locations           []Location                     `json:"locations,omitempty"`
	Message             Message                        `json:"message"`
	OccurrenceCount     int                            `json:"occurrenceCount,omitempty"`
	PartialFingerprints map[string]PartialFingerprint  `json:"partialFingerprints,omitempty"`
	Properties          PropertyBag                    `json:"properties,omitempty"`
	Provenance          ResultProvenance               `json:"provenance,omitempty"`
	Rank                float64                        `json:"rank,omitempty"`
	RelatedLocations    []Location                     `json:"relatedLocations,omitempty"`
	Rule                ReportingDescriptorReference   `json:"rule,omitempty"`
	RuleID              string                         `json:"ruleId,omitempty"`
	RuleIndex           int                            `json:"ruleIndex,omitempty"`
	Stacks              []Stack                        `json:"stacks,omitempty"`
	Suppressions        []Suppression                  `json:"suppressions,omitempty"`
	Taxa                []ReportingDescriptorReference `json:"taxa,omitempty"`
	WebRequest          WebRequest                     `json:"webRequest,omitempty"`
	WebResponse         WebResponse                    `json:"webResponse,omitempty"`
	WorkItemUris        []WorkItemURI                  `json:"workItemUris,omitempty"`
}

// Contains information about how and when a result was detected.
type ResultProvenance struct {
	ConversionSources     []PhysicalLocation `json:"conversionSources,omitempty"`
	FirstDetectionRunGUID string             `json:"firstDetectionRunGuid,omitempty"`
	FirstDetectionTimeUtc time.Time          `json:"firstDetectionTimeUtc,omitempty"`
	InvocationIndex       int                `json:"invocationIndex,omitempty"`
	LastDetectionRunGUID  string             `json:"lastDetectionRunGuid,omitempty"`
	LastDetectionTimeUtc  time.Time          `json:"lastDetectionTimeUtc,omitempty"`
	Properties            PropertyBag        `json:"properties,omitempty"`
}

// The role or roles played by the artifact in the analysis.
type Role interface{}

// Describes a single run of an analysis tool, and contains the reported output of that run.
type Run struct {
	Addresses                      []Address                      `json:"addresses,omitempty"`
	Artifacts                      []Artifact                     `json:"artifacts,omitempty"`
	AutomationDetails              RunAutomationDetails           `json:"automationDetails,omitempty"`
	BaselineGUID                   string                         `json:"baselineGuid,omitempty"`
	ColumnKind                     interface{}                    `json:"columnKind,omitempty"`
	Conversion                     Conversion                     `json:"conversion,omitempty"`
	DefaultEncoding                string                         `json:"defaultEncoding,omitempty"`
	DefaultSourceLanguage          string                         `json:"defaultSourceLanguage,omitempty"`
	ExternalPropertyFileReferences ExternalPropertyFileReferences `json:"externalPropertyFileReferences,omitempty"`
	Graphs                         []Graph                        `json:"graphs,omitempty"`
	Invocations                    []Invocation                   `json:"invocations,omitempty"`
	Language                       string                         `json:"language,omitempty"`
	LogicalLocations               []LogicalLocation              `json:"logicalLocations,omitempty"`
	NewlineSequences               []NewlineSequence              `json:"newlineSequences,omitempty"`
	OriginalURIBaseIds             map[string]ArtifactLocation    `json:"originalUriBaseIds,omitempty"`
	Policies                       []ToolComponent                `json:"policies,omitempty"`
	Properties                     PropertyBag                    `json:"properties,omitempty"`
	RedactionTokens                []RedactionToken               `json:"redactionTokens,omitempty"`
	Results                        []Result                       `json:"results,omitempty"`
	RunAggregates                  []RunAutomationDetails         `json:"runAggregates,omitempty"`
	SpecialLocations               SpecialLocations               `json:"specialLocations,omitempty"`
	Taxonomies                     []ToolComponent                `json:"taxonomies,omitempty"`
	ThreadFlowLocations            []ThreadFlowLocation           `json:"threadFlowLocations,omitempty"`
	Tool                           Tool                           `json:"tool"`
	Translations                   []ToolComponent                `json:"translations,omitempty"`
	VersionControlProvenance       []VersionControlDetails        `json:"versionControlProvenance,omitempty"`
	WebRequests                    []WebRequest                   `json:"webRequests,omitempty"`
	WebResponses                   []WebResponse                  `json:"webResponses,omitempty"`
}

// Information that describes a run's identity and role within an engineering system process.
type RunAutomationDetails struct {
	CorrelationGUID string      `json:"correlationGuid,omitempty"`
	Description     Message     `json:"description,omitempty"`
	GUID            string      `json:"guid,omitempty"`
	ID              string      `json:"id,omitempty"`
	Properties      PropertyBag `json:"properties,omitempty"`
}

// Static Analysis Results Format (SARIF) Version 2.1.0-rtm.4 JSON Schema: a standard format for the output of static analysis tools.
type Sarif struct {
	InlineExternalProperties []ExternalProperties `json:"inlineExternalProperties,omitempty"`
	Properties               PropertyBag          `json:"properties,omitempty"`
	Runs                     []Run                `json:"runs"`
	Schema                   string               `json:"$schema,omitempty"`
	Version                  interface{}          `json:"version"`
}

// Defines locations of special significance to SARIF consumers.
type SpecialLocations struct {
	DisplayBase ArtifactLocation `json:"displayBase,omitempty"`
	Properties  PropertyBag      `json:"properties,omitempty"`
}

// A call stack that is relevant to a result.
type Stack struct {
	Frames     []StackFrame `json:"frames"`
	Message    Message      `json:"message,omitempty"`
	Properties PropertyBag  `json:"properties,omitempty"`
}

// A function call within a stack trace.
type StackFrame struct {
	Location   Location              `json:"location,omitempty"`
	Module     string                `json:"module,omitempty"`
	Parameters []StackFrameParameter `json:"parameters,omitempty"`
	Properties PropertyBag           `json:"properties,omitempty"`
	ThreadID   int                   `json:"threadId,omitempty"`
}

// The parameters of the call that is executing.
type StackFrameParameter string

// A suppression that is relevant to a result.
type Suppression struct {
	GUID          string      `json:"guid,omitempty"`
	Justification string      `json:"justification,omitempty"`
	Kind          interface{} `json:"kind"`
	Location      Location    `json:"location,omitempty"`
	Properties    PropertyBag `json:"properties,omitempty"`
	State         interface{} `json:"state,omitempty"`
}

// A set of distinct strings that provide additional information.
type Tag string

// Describes a sequence of code locations that specify a path through a single thread of execution such as an operating system or fiber.
type ThreadFlow struct {
	ID             string                              `json:"id,omitempty"`
	ImmutableState map[string]MultiformatMessageString `json:"immutableState,omitempty"`
	InitialState   map[string]MultiformatMessageString `json:"initialState,omitempty"`
	Locations      []ThreadFlowLocation                `json:"locations"`
	Message        Message                             `json:"message,omitempty"`
	Properties     PropertyBag                         `json:"properties,omitempty"`
}

// A location visited by an analysis tool while simulating or monitoring the execution of a program.
type ThreadFlowLocation struct {
	ExecutionOrder   int                                 `json:"executionOrder,omitempty"`
	ExecutionTimeUtc time.Time                           `json:"executionTimeUtc,omitempty"`
	Importance       interface{}                         `json:"importance,omitempty"`
	Index            int                                 `json:"index,omitempty"`
	Kinds            []ThreadFlowLocationKind            `json:"kinds,omitempty"`
	Location         Location                            `json:"location,omitempty"`
	Module           string                              `json:"module,omitempty"`
	NestingLevel     int                                 `json:"nestingLevel,omitempty"`
	Properties       PropertyBag                         `json:"properties,omitempty"`
	Stack            Stack                               `json:"stack,omitempty"`
	State            map[string]MultiformatMessageString `json:"state,omitempty"`
	Taxa             []ReportingDescriptorReference      `json:"taxa,omitempty"`
	WebRequest       WebRequest                          `json:"webRequest,omitempty"`
	WebResponse      WebResponse                         `json:"webResponse,omitempty"`
}

// A set of distinct strings that categorize the thread flow location. Well-known kinds include 'acquire', 'release', 'enter', 'exit', 'call', 'return', 'branch', 'implicit', 'false', 'true', 'caution', 'danger', 'unknown', 'unreachable', 'taint', 'function', 'handler', 'lock', 'memory', 'resource', 'scope' and 'value'.
type ThreadFlowLocationKind string

// The analysis tool that was run.
type Tool struct {
	Driver     ToolComponent   `json:"driver"`
	Extensions []ToolComponent `json:"extensions,omitempty"`
	Properties PropertyBag     `json:"properties,omitempty"`
}

// A component, such as a plug-in or the driver, of the analysis tool that was run.
type ToolComponent struct {
	AssociatedComponent                         ToolComponentReference              `json:"associatedComponent,omitempty"`
	Contents                                    []Content                           `json:"contents,omitempty"`
	DottedQuadFileVersion                       string                              `json:"dottedQuadFileVersion,omitempty"`
	DownloadURI                                 string                              `json:"downloadUri,omitempty"`
	FullDescription                             MultiformatMessageString            `json:"fullDescription,omitempty"`
	FullName                                    string                              `json:"fullName,omitempty"`
	GUID                                        string                              `json:"guid,omitempty"`
	GlobalMessageStrings                        map[string]MultiformatMessageString `json:"globalMessageStrings,omitempty"`
	InformationURI                              string                              `json:"informationUri,omitempty"`
	IsComprehensive                             bool                                `json:"isComprehensive,omitempty"`
	Language                                    string                              `json:"language,omitempty"`
	LocalizedDataSemanticVersion                string                              `json:"localizedDataSemanticVersion,omitempty"`
	Locations                                   []ArtifactLocation                  `json:"locations,omitempty"`
	MinimumRequiredLocalizedDataSemanticVersion string                              `json:"minimumRequiredLocalizedDataSemanticVersion,omitempty"`
	Name                                        string                              `json:"name"`
	Notifications                               []ReportingDescriptor               `json:"notifications,omitempty"`
	Organization                                string                              `json:"organization,omitempty"`
	Product                                     string                              `json:"product,omitempty"`
	ProductSuite                                string                              `json:"productSuite,omitempty"`
	Properties                                  PropertyBag                         `json:"properties,omitempty"`
	ReleaseDateUtc                              string                              `json:"releaseDateUtc,omitempty"`
	Rules                                       []ReportingDescriptor               `json:"rules,omitempty"`
	SemanticVersion                             string                              `json:"semanticVersion,omitempty"`
	ShortDescription                            MultiformatMessageString            `json:"shortDescription,omitempty"`
	SupportedTaxonomies                         []ToolComponentReference            `json:"supportedTaxonomies,omitempty"`
	Taxa                                        []ReportingDescriptor               `json:"taxa,omitempty"`
	TranslationMetadata                         TranslationMetadata                 `json:"translationMetadata,omitempty"`
	Version                                     string                              `json:"version,omitempty"`
}

// Identifies a particular toolComponent object, either the driver or an extension.
type ToolComponentReference struct {
	GUID       string      `json:"guid,omitempty"`
	Index      int         `json:"index,omitempty"`
	Name       string      `json:"name,omitempty"`
	Properties PropertyBag `json:"properties,omitempty"`
}

// Provides additional metadata related to translation.
type TranslationMetadata struct {
	DownloadURI      string                   `json:"downloadUri,omitempty"`
	FullDescription  MultiformatMessageString `json:"fullDescription,omitempty"`
	FullName         string                   `json:"fullName,omitempty"`
	InformationURI   string                   `json:"informationUri,omitempty"`
	Name             string                   `json:"name"`
	Properties       PropertyBag              `json:"properties,omitempty"`
	ShortDescription MultiformatMessageString `json:"shortDescription,omitempty"`
}

// Specifies the information necessary to retrieve a desired revision from a version control system.
type VersionControlDetails struct {
	AsOfTimeUtc   time.Time        `json:"asOfTimeUtc,omitempty"`
	Branch        string           `json:"branch,omitempty"`
	MappedTo      ArtifactLocation `json:"mappedTo,omitempty"`
	Properties    PropertyBag      `json:"properties,omitempty"`
	RepositoryURI string           `json:"repositoryUri"`
	RevisionID    string           `json:"revisionId,omitempty"`
	RevisionTag   string           `json:"revisionTag,omitempty"`
}

// Describes an HTTP request.
type WebRequest struct {
	Body       ArtifactContent                `json:"body,omitempty"`
	Headers    map[string]WebRequestHeader    `json:"headers,omitempty"`
	Index      int                            `json:"index,omitempty"`
	Method     string                         `json:"method,omitempty"`
	Parameters map[string]WebRequestParameter `json:"parameters,omitempty"`
	Properties PropertyBag                    `json:"properties,omitempty"`
	Protocol   string                         `json:"protocol,omitempty"`
	Target     string                         `json:"target,omitempty"`
	Version    string                         `json:"version,omitempty"`
}

// The request headers.
type WebRequestHeader string

// The request parameters.
type WebRequestParameter string

// Describes the response to an HTTP request.
type WebResponse struct {
	Body               ArtifactContent              `json:"body,omitempty"`
	Headers            map[string]WebResponseHeader `json:"headers,omitempty"`
	Index              int                          `json:"index,omitempty"`
	NoResponseReceived bool                         `json:"noResponseReceived,omitempty"`
	Properties         PropertyBag                  `json:"properties,omitempty"`
	Protocol           string                       `json:"protocol,omitempty"`
	ReasonPhrase       string                       `json:"reasonPhrase,omitempty"`
	StatusCode         int                          `json:"statusCode,omitempty"`
	Version            string                       `json:"version,omitempty"`
}

// The response headers.
type WebResponseHeader string

// The URIs of the work items associated with this result.
type WorkItemURI string
